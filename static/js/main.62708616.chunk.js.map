{"version":3,"sources":["page/HomePage.tsx","game/gameData.ts","components/ProgressBar.tsx","components/DecayTrail.tsx","components/DrugPicker.tsx","page/GamePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HomePage","props","className","src","onClick","onStart","data","type","content","icon","ProgressBar","DecayTrail","imgName","style","transform","DrugPicker","GamePage","useState","step","setStep","textContainerRef","useRef","useEffect","currentEvent","gameData","Array","isArray","timeoutId","setTimeout","clearTimeout","current","scrollTo","top","behavior","profileImg","lastIconImg","length","display","width","marginRight","ref","slice","map","i","cursor","disabled","App","started","setStarted","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62708616.chunk.js","sourcesContent":["import React from 'react';\nimport \"./homePage.scss\";\n\nconst HomePage = (props : {onStart : () => void}) => {\n    return (\n    <div className=\"home-page\">\n        <img className=\"background-image\" src=\"/hackajunction-2020-drug-app/LandingPage.jpg\" />\n        <div className=\"content-container\">\n            <h1 className=\"title\">\n                Think you can outsmart drugs?\n            </h1>\n            <h2 className=\"subtitle\">\n                Choose your own drug adventure to see who wins: You or Drugs\n            </h2>\n\n            <button className=\"start-button\" onClick={props.onStart}>\n                Play Now\n            </button>\n        </div>\n    </div>\n    ) \n}\n\nexport default HomePage;","export const data = [\n    {\n        type : 'content',\n        content : 'You just joined a new group of friends, and they are awesome!'\n    },\n    {\n        type : 'content',\n        content : 'They decided to go somewhere during the weekend and started using meth.'\n    },\n    {\n        type : 'content',\n        content : 'You did not want to be the boring one, so you gave it a try!'\n    },\n    [\n        'I dont want to go against the trend.',\n        'Decide to quit.'\n    ],\n    {\n        type : 'content',\n        content : 'You havent paid much attention to your previous friends.',\n        icon: '/heart.svg'\n    },\n    {\n        type : 'content',\n        content : 'Your scores have never been this low, you concentration is surely not at its peak.',\n        icon: '/brain.svg'\n    },\n    [\n        'Fine you have new friends now.',\n        'Care about your previous friends and relationships.'\n    ],\n    {\n        type : 'content',\n        content : 'Skipping school sometimes would hurts, and there are best places to be.',\n    },\n    {\n        type : 'content',\n        content : 'Your mom feels something is wrong but not sure what is causing it.',\n        icon : '/mom.svg'\n    },\n    {\n        type : 'content',\n        content : 'She cries frequently and has trouble sleeping, but you are not aware of it.',\n    },\n    {\n        type : 'content',\n        content : 'Trying a direct approach she talks to you.',\n    },\n    [\n        'The last thing you need is a punishment , lie and hope for the best.',\n        'Tell her everything and face the issue.'\n    ],\n    {\n        type : 'content',\n        content : 'Seems like she fell for it and you are safe.',\n    },\n    {\n        type : 'content',\n        content : 'You still dont feel like you have a reason to stop and keep using it casually.',\n    },\n    {\n        type : 'content',\n        content : 'Are people able to see the change to your skin color and teeth decaying?',\n        icon: '/tooth.svg'\n    },\n    {\n        type : 'result',\n        content : 'Your mom is not able to help you anymore, you’ve lost your beauty, friends, grades & the ability to even understand any of this loss. Think you’ll do better on another drug?'\n    }\n]","import React from 'react';\nimport \"./progressBar.scss\";\n\nconst ProgressBar = () => (\n    <div className=\"progress-bar\">\n        <div className=\"inner-bar\" />\n    </div>\n)\n\nexport default ProgressBar;","import React from 'react';\nimport \"./decayTrail.scss\";\n\nconst DecayTrail = (props : {imgName : string | null}) => {\n\n   return (\n        <div className=\"decay-trail\">\n            {\n                props.imgName && <>\n                    <img src={`/hackajunction-2020-drug-app/bw_${props.imgName}`} style={{transform: 'translate(6px, -15px)  scale(0.5)'}}/>\n                    <img src={`/hackajunction-2020-drug-app/bw_${props.imgName}`} style={{transform: 'scaleX(-1) translate(6px, -12px)  scale(0.6)'}}/>\n                    <img src={`/hackajunction-2020-drug-app/bw_${props.imgName}`} style={{transform: 'translate(6px, -9px)  scale(0.7)'}}/>\n                    <img src={`/hackajunction-2020-drug-app/bw_${props.imgName}`} style={{transform: 'scaleX(-1) translate(6px, -6px)  scale(0.8)'}}/>\n                    <img src={`/hackajunction-2020-drug-app/bw_${props.imgName}`} style={{transform: 'translate(6px, -3px) scale(0.9)'}}/>\n                    <img src={`/hackajunction-2020-drug-app/bw_${props.imgName}`} style={{transform: 'scaleX(-1) translate(6px, -3px)'}}/>\n                </>\n            }\n\n            <div className=\"main-icon-container\">\n                <img src={props.imgName ? `/hackajunction-2020-drug-app/${props.imgName}` : '/hackajunction-2020-drug-app/full_heart.svg'}  />\n            </div>\n        </div>\n   ) \n}\n\nexport default DecayTrail;","import React from 'react';\nimport \"./drugPicker.scss\";\n\nconst DrugPicker = () => {\n    return <div className=\"drug-picker\">\n            <button className=\"drug-button\">\n                <img src=\"/hackajunction-2020-drug-app/unavailable.svg\" />\n                <img src=\"/hackajunction-2020-drug-app/cocaine.svg\" />\n            </button>\n            <button className=\"drug-button\">\n                <img src=\"/hackajunction-2020-drug-app/unavailable.svg\" />\n                <img src=\"/hackajunction-2020-drug-app/heroin.svg\" />\n            </button>\n            <button className=\"drug-button\">\n                <img src=\"/hackajunction-2020-drug-app/meth.svg\" />\n            </button>\n    </div>\n}\n\nexport default DrugPicker;","import React, { useState, useEffect, useRef } from 'react';\nimport \"./gamePage.scss\";\nimport {data as gameData, data} from '../game/gameData';\nimport ProgressBar from '../components/ProgressBar';\nimport DecayTrail from '../components/DecayTrail';\nimport DrugPicker from '../components/DrugPicker';\n\nconst GamePage = () => {\n    const [step, setStep] = useState(0);\n    const textContainerRef = useRef(null as null | HTMLDivElement);\n    useEffect(() => {\n        const currentEvent = gameData[step]; \n        if (Array.isArray(currentEvent)) {\n             const timeoutId = setTimeout(() => {\n                setStep(step + 1);\n            }, 7000)\n            return () => clearTimeout(timeoutId);\n        }\n        if (currentEvent.type === \"content\") {\n            const timeoutId = setTimeout(() => {\n                setStep(step + 1);\n            }, 4000)\n            return () => clearTimeout(timeoutId);\n        }\n    }, [step])\n    useEffect(() => {\n        if (textContainerRef.current) {\n            textContainerRef.current.scrollTo({\n                top: 999999999, behavior: 'smooth'\n            })\n        }\n    }, [step])\n\n    let profileImg = \"/hackajunction-2020-drug-app/hackajunction-2020-drug-app/profile_0.jpg\"\n    if (step >= 7) {\n        profileImg = \"/hackajunction-2020-drug-app/hackajunction-2020-drug-app/profile_1.jpg\"\n    }\n    if (step >= 12 ) {\n        profileImg = \"/hackajunction-2020-drug-app/hackajunction-2020-drug-app/profile_2.jpg\"\n    }\n\n    let lastIconImg : string | null= null\n    if (step >= 4) {\n        lastIconImg = \"heart.svg\"\n    }\n    if (step >= 5) {\n        lastIconImg = \"brain.svg\"\n    }\n    if (step >= 14) {\n        lastIconImg = \"tooth.svg\"\n    }\n\n    return <div className=\"game-page\">\n        {Array.isArray(gameData[step]) && <ProgressBar />}\n        <div className=\"gradient-overlay\" />\n        <img className=\"profile-image\" src={profileImg}/>\n        <DrugPicker/>\n        {\n            step  == data.length &&\n            <button className=\"share-button\">\n                <img src=\"/hackajunction-2020-drug-app/share.svg\" />\n            </button>\n        }\n        <div className=\"chat-box\">\n            <div className=\"location-tag\" style={{display: 'flex'}}><img src=\"/hackajunction-2020-drug-app/pin.png\"  style={{width: '20px', marginRight: '10px'}}/>aalto university</div>\n            <div className=\"text-container\" ref={textContainerRef}>\n                {gameData.slice(0,step+1).map((data, i) => {\n                    if (Array.isArray(data)) {\n                        if (i !== step) {\n                            return <div className=\"message action\">{data[0]}</div>                            \n                        }\n                        return (\n                        <div className=\"action-buttons-container\">\n                            <button className=\"option-button\" onClick={() => setStep(step + 1)}>{data[0]}</button>\n                            <button className=\"option-button\" style={{cursor: 'default'}} disabled>{data[1]}</button>\n                        </div>\n                        ) \n                    }\n                    if (data.type === \"content\") {\n                        return <div className=\"message\">\n                            {data.icon && <img className=\"message-icon\" src={data.icon}/>}\n                            {data.content}</div>\n                    }\n                    if (data.type === 'result') {\n                        return (\n                            <>\n                                <div className=\"message\">\n                                    {data.content}\n                                </div>\n                                <button className=\"play-again-button\" onClick={() => setStep(0)}>\n                                    Play Again\n                                </button>\n                            </>\n                        )\n                    }\n                })}\n            </div>\n            <DecayTrail imgName={lastIconImg}/>\n        </div>\n    </div>\n}\n\nexport default GamePage;","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport HomePage from './page/HomePage';\nimport GamePage from './page/GamePage';\n\nfunction App() {\n  const [started, setStarted] = useState(false);\n  return (\n    <div className=\"App\">\n      {\n        !started && <HomePage onStart={() => setStarted(true)}/>\n      }\n      {\n        started && <GamePage/>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}